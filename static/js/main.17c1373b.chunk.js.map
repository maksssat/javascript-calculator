{"version":3,"sources":["Redux/types.js","Calculator/Buttons.js","Redux/actions.js","Calculator/Display.js","Calculator/Calculator.js","App.js","Redux/calculatorReducer.js","Redux/rootReducer.js","index.js"],"names":["OPERAND_ENTER","OPERATOR_ENTER","numbers","value","id","operators","Buttons","dispatch","useDispatch","handleOperandClick","target","type","handleOperatorClick","className","map","onClick","Display","display","useSelector","state","calculator","Calculator","App","initialState","Map","rootReducer","combineReducers","action","polishNotationStack","polishNotation","output","input","match","i","length","test","push","get","slice","splice","polishNotationResult","reverse","forEach","item","reduce","a","b","Number","isInteger","toFixed","replace","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"6OAAaA,EAAgB,gBAChBC,EAAiB,iBCE9B,IAAMC,EAAU,CACd,CACEC,MAAO,EACPC,GAAI,SAEN,CACED,MAAO,EACPC,GAAI,SAEN,CACED,MAAO,EACPC,GAAI,QAEN,CACED,MAAO,EACPC,GAAI,QAEN,CACED,MAAO,EACPC,GAAI,QAEN,CACED,MAAO,EACPC,GAAI,OAEN,CACED,MAAO,EACPC,GAAI,OAEN,CACED,MAAO,EACPC,GAAI,OAEN,CACED,MAAO,EACPC,GAAI,SAEN,CACED,MAAO,EACPC,GAAI,QAEN,CACED,MAAO,IACPC,GAAI,WAEN,CACED,MAAO,IACPC,GAAI,WAIFC,EAAY,CAChB,CACEF,MAAO,IACPC,GAAI,SAEN,CACED,MAAO,IACPC,GAAI,UAEN,CACED,MAAO,IACPC,GAAI,YAEN,CACED,MAAO,IACPC,GAAI,YAEN,CACED,MAAO,IACPC,GAAI,QAIO,SAASE,IACtB,IAAMC,EAAWC,cAEjB,SAASC,EAAT,GAAyC,IC9EdL,EAAID,ED8EDO,EAAU,EAAVA,OAC5BH,GC/EyBH,ED+EHM,EAAON,GC/EAD,ED+EIO,EAAOP,MC9EnC,CAAEQ,KAAMX,EAAeI,KAAID,WDiFlC,SAASS,EAAT,GAA0C,IC9EdR,EAAID,ED8EDO,EAAU,EAAVA,OAC7BH,GC/E0BH,ED+EHM,EAAON,GC/EAD,ED+EIO,EAAOP,MC9EpC,CAAEQ,KAAMV,EAAgBG,KAAID,WDiFnC,OACE,sBAAKU,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,SACGX,EAAQY,KAAI,YAAoB,IAAjBX,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACrB,OACE,wBAAQA,GAAIA,EAAIW,QAASN,EAAoBN,MAAOA,EAApD,SACGA,GAD6DC,QAMtE,qBAAKS,UAAU,YAAf,SACGR,EAAUS,KAAI,YAAoB,IAAjBV,EAAgB,EAAhBA,GAAID,EAAY,EAAZA,MACpB,OACE,wBACEY,QAASH,EACTR,GAAIA,EAEJD,MAAOA,EAJT,SAMGA,GAHIC,WEvGJ,SAASY,IACtB,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWH,WACxD,OACE,qBAAKb,GAAG,UAAR,SACE,qBAAKS,UAAU,UAAf,SAA0BI,MCFjB,SAASI,IACtB,OACE,sBAAKR,UAAU,aAAf,UACE,cAACG,EAAD,IACA,cAACV,EAAD,OCGSgB,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAACQ,EAAD,O,6BCJAE,EAAe,CACnBN,QAAS,KAGPH,EAAM,IAAIU,IAAI,CAChB,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,KCPD,IAAMC,EAAcC,0BAAgB,CACzCN,WDSa,WAA0D,IAA/BD,EAA8B,uDAAtBI,EAAcI,EAAQ,uCAChEvB,EAAKuB,EAAOvB,GACZD,EAAQwB,EAAOxB,MACfc,EAAUE,EAAMF,QAEtB,OAAQU,EAAOhB,MACb,KAAKX,EAEH,GAAW,WAAPI,EAAiB,CASnB,IARA,IAAMwB,EAAsB,GACtBC,EAAiB,GACjBC,EAAS,GACTC,EAAQd,EAAQe,MACpB,sDAIOC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAChC,GAAI,KAAKE,KAAKJ,EAAME,IAClBJ,EAAeO,MAAML,EAAME,SACtB,GAAI,aAAaE,KAAKJ,EAAME,IAAK,CACtC,KACEnB,EAAIuB,IAAIN,EAAME,KAAOnB,EAAIuB,IAAJ,MAAAvB,EAAG,YAAQc,EAAoBU,OAAO,MAE3DT,EAAeO,KAAf,MAAAP,EAAc,YAASD,EAAoBW,QAAQ,EAAG,KAExDX,EAAoBQ,KAAKL,EAAME,IAKnC,IAAMO,EAAoB,UACrBX,EADqB,YAErBD,EAAoBa,YA2BzB,OAvBAD,EAAqBE,SAAQ,SAACC,GAC5B,GAAI,KAAKR,KAAKQ,GACZb,EAAOM,KAAKO,QAEZ,OAAQA,GACN,IAAK,IACHb,EAAOM,KAAKN,EAAOS,QAAQ,GAAGK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MACnD,MACF,IAAK,IACHhB,EAAOM,KAAKN,EAAOS,QAAQ,GAAGK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MACnD,MACF,IAAK,IACHhB,EAAOM,KAAKN,EAAOS,QAAQ,GAAGK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MACnD,MACF,IAAK,IACHhB,EAAOM,KAAKN,EAAOS,QAAQ,GAAGK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,UAQvDC,OAAOC,UAAUlB,EAAO,IACnB,2BAAKX,GAAZ,IAAmBF,QAASa,EAAO,KAC9B,2BAAYX,GAAZ,IAAmBF,QAASa,EAAO,GAAGmB,QAAQ,KAChD,GACLhC,EAAQiB,OAAS,IACT,YAAP9B,IAAqB,MAAM+B,KAAKlB,IAAY,UAAUkB,KAAKlB,IAE5D,OAAOE,EACF,GAAW,YAAPf,GAAoB,gBAAgB+B,KAAKlB,GAClD,OAAO,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,EAAL,YAAgBd,KACrC,GAAgB,MAAZc,GAA0B,YAAPb,EAC5B,OAAO,2BAAKe,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,GAAL,OAAed,KACpC,GAAgB,MAAZc,EACT,OAAO,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKd,KAC1B,GAAgB,MAAZc,EACT,OAAO,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,GAAL,OAAed,KAE3C,MAEF,KAAKF,EACH,GAAW,UAAPG,EACF,MAAO,CACLa,QAAS,KAEN,GAAIA,EAAQiB,OAAS,GAC1B,OAAOf,EAEP,OAAQf,GACN,IAAK,SACH,MAAI,mBAAmB+B,KAAKlB,GACnB,2BACFE,GADL,IAEEF,QAASA,EAAQiC,QAAQ,iBAAkB,OAEpC,MAAMf,KAAKlB,IAAwB,MAAZA,EACzB,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,GAAL,OAAed,KAC7BgB,EAChB,IAAK,WACH,MAAI,mBAAmBgB,KAAKlB,GACnB,2BACFE,GADL,IAEEF,QAASA,EAAQiC,QAAQ,iBAAkB,OAEpC,MAAMf,KAAKlB,IAAwB,MAAZA,EACzB,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,GAAL,OAAed,KAC7BgB,EAChB,IAAK,WACH,MAAI,UAAUgB,KAAKlB,GACV,2BAAKE,GAAZ,IAAmBF,QAASA,EAAQiC,QAAQ,UAAW,OAClC,MAAZjC,EACF,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,GAAL,OAAed,KACpB,MAAZc,EACF,2BAAKE,GAAZ,IAAmBF,QAAS,MAChBE,EAChB,IAAK,MACH,MAAI,mBAAmBgB,KAAKlB,GACnB,2BACFE,GADL,IAEEF,QAASA,EAAQiC,QAAQ,iBAAkB,OAEpC,MAAMf,KAAKlB,IAAwB,MAAZA,EACzB,2BAAKE,GAAZ,IAAmBF,QAAQ,GAAD,OAAKA,GAAL,OAAed,KAC7BgB,EAChB,QACE,OAAOA,EAGf,QACE,OAAOA,MEpIPgC,EAAQC,sBAAY3B,EAAa4B,8BAEvCC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.17c1373b.chunk.js","sourcesContent":["export const OPERAND_ENTER = \"OPERAND_ENTER\";\r\nexport const OPERATOR_ENTER = \"OPERATOR_ENTER\";\r\n","import { useDispatch } from \"react-redux\";\r\nimport { operandEnter, operatorEnter } from \"../Redux/actions\";\r\n\r\nconst numbers = [\r\n  {\r\n    value: 7,\r\n    id: \"seven\",\r\n  },\r\n  {\r\n    value: 8,\r\n    id: \"eight\",\r\n  },\r\n  {\r\n    value: 9,\r\n    id: \"nine\",\r\n  },\r\n  {\r\n    value: 4,\r\n    id: \"four\",\r\n  },\r\n  {\r\n    value: 5,\r\n    id: \"five\",\r\n  },\r\n  {\r\n    value: 6,\r\n    id: \"six\",\r\n  },\r\n  {\r\n    value: 1,\r\n    id: \"one\",\r\n  },\r\n  {\r\n    value: 2,\r\n    id: \"two\",\r\n  },\r\n  {\r\n    value: 3,\r\n    id: \"three\",\r\n  },\r\n  {\r\n    value: 0,\r\n    id: \"zero\",\r\n  },\r\n  {\r\n    value: \".\",\r\n    id: \"decimal\",\r\n  },\r\n  {\r\n    value: \"=\",\r\n    id: \"equals\",\r\n  },\r\n];\r\n\r\nconst operators = [\r\n  {\r\n    value: \"C\",\r\n    id: \"clear\",\r\n  },\r\n  {\r\n    value: \"/\",\r\n    id: \"divide\",\r\n  },\r\n  {\r\n    value: \"*\",\r\n    id: \"multiply\",\r\n  },\r\n  {\r\n    value: \"-\",\r\n    id: \"subtract\",\r\n  },\r\n  {\r\n    value: \"+\",\r\n    id: \"add\",\r\n  },\r\n];\r\n\r\nexport default function Buttons() {\r\n  const dispatch = useDispatch();\r\n\r\n  function handleOperandClick({ target }) {\r\n    dispatch(operandEnter(target.id, target.value));\r\n  }\r\n\r\n  function handleOperatorClick({ target }) {\r\n    dispatch(operatorEnter(target.id, target.value));\r\n  }\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      <div className=\"numbers\">\r\n        {numbers.map(({ value, id }) => {\r\n          return (\r\n            <button id={id} onClick={handleOperandClick} value={value} key={id}>\r\n              {value}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"operators\">\r\n        {operators.map(({ id, value }) => {\r\n          return (\r\n            <button\r\n              onClick={handleOperatorClick}\r\n              id={id}\r\n              key={id}\r\n              value={value}\r\n            >\r\n              {value}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { OPERAND_ENTER, OPERATOR_ENTER } from \"./types\";\r\n\r\nexport function operandEnter(id, value) {\r\n  return { type: OPERAND_ENTER, id, value };\r\n}\r\n\r\nexport function operatorEnter(id, value) {\r\n  return { type: OPERATOR_ENTER, id, value };\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nexport default function Display() {\r\n  const display = useSelector((state) => state.calculator.display);\r\n  return (\r\n    <div id=\"display\">\r\n      <div className=\"display\">{display}</div>\r\n    </div>\r\n  );\r\n}\r\n","import Buttons from \"./Buttons\";\r\nimport Display from \"./Display\";\r\nimport React from \"react\";\r\n\r\nexport default function Calculator() {\r\n  return (\r\n    <div className=\"calculator\">\r\n      <Display />\r\n      <Buttons />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Calculator from \"./Calculator/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import { OPERAND_ENTER, OPERATOR_ENTER } from \"./types\";\r\n\r\nconst initialState = {\r\n  display: \"0\",\r\n};\r\n\r\nlet map = new Map([\r\n  [\"+\", 1],\r\n  [\"-\", 1],\r\n  [\"*\", 2],\r\n  [\"/\", 2],\r\n]);\r\n\r\nexport default function calculatorReducer(state = initialState, action) {\r\n  const id = action.id;\r\n  const value = action.value;\r\n  const display = state.display;\r\n\r\n  switch (action.type) {\r\n    case OPERAND_ENTER:\r\n      //обработка нажатий на знак равно\r\n      if (id === \"equals\") {\r\n        const polishNotationStack = [];\r\n        const polishNotation = [];\r\n        const output = [];\r\n        const input = display.match(\r\n          /((?<=\\/|\\*|-|\\+)-\\d+)|(\\/|\\*|-|\\+)|(\\d+\\.\\d+)|\\d+/g\r\n        );\r\n\r\n        //приведение к обратной польской нотации\r\n        for (let i = 0; i < input.length; i++) {\r\n          if (/\\d/.test(input[i])) {\r\n            polishNotation.push(+input[i]);\r\n          } else if (/\\/|\\*|-|\\+/.test(input[i])) {\r\n            while (\r\n              map.get(input[i]) <= map.get(...polishNotationStack.slice(-1))\r\n            ) {\r\n              polishNotation.push(...polishNotationStack.splice(-1, 1));\r\n            }\r\n            polishNotationStack.push(input[i]);\r\n          }\r\n        }\r\n\r\n        //массив обратной польской нотации\r\n        const polishNotationResult = [\r\n          ...polishNotation,\r\n          ...polishNotationStack.reverse(),\r\n        ];\r\n\r\n        //вычисление результата из обратной польской нотации\r\n        polishNotationResult.forEach((item) => {\r\n          if (/\\d/.test(item)) {\r\n            output.push(item);\r\n          } else {\r\n            switch (item) {\r\n              case \"+\":\r\n                output.push(output.splice(-2).reduce((a, b) => a + b));\r\n                break;\r\n              case \"-\":\r\n                output.push(output.splice(-2).reduce((a, b) => a - b));\r\n                break;\r\n              case \"*\":\r\n                output.push(output.splice(-2).reduce((a, b) => a * b));\r\n                break;\r\n              case \"/\":\r\n                output.push(output.splice(-2).reduce((a, b) => a / b));\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        });\r\n\r\n        if (Number.isInteger(output[0])) {\r\n          return { ...state, display: output[0] };\r\n        } else return { ...state, display: output[0].toFixed(2) };\r\n      } else if (\r\n        display.length > 13 ||\r\n        (id === \"decimal\" && (/\\.$/.test(display) || /\\\\.\\d+$/.test(display)))\r\n      ) {\r\n        return state;\r\n      } else if (id === \"decimal\" && /(\\/|\\*|-|\\+)$/.test(display)) {\r\n        return { ...state, display: `${display}0${value}` };\r\n      } else if (display === \"0\" && id === \"decimal\") {\r\n        return { ...state, display: `${display}${value}` };\r\n      } else if (display === \"0\") {\r\n        return { ...state, display: `${value}` };\r\n      } else if (display !== \"0\") {\r\n        return { ...state, display: `${display}${value}` };\r\n      }\r\n      break;\r\n\r\n    case OPERATOR_ENTER:\r\n      if (id === \"clear\") {\r\n        return {\r\n          display: \"0\",\r\n        };\r\n      } else if (display.length > 13) {\r\n        return state;\r\n      } else {\r\n        switch (id) {\r\n          case \"divide\":\r\n            if (/\\d(\\/|\\*|-|\\+)+$/.test(display)) {\r\n              return {\r\n                ...state,\r\n                display: display.replace(/(\\/|\\*|-|\\+)+$/, \"/\"),\r\n              };\r\n            } else if (/\\d$/.test(display) && display !== \"0\") {\r\n              return { ...state, display: `${display}${value}` };\r\n            } else return state;\r\n          case \"multiply\":\r\n            if (/\\d(\\/|\\*|-|\\+)+$/.test(display)) {\r\n              return {\r\n                ...state,\r\n                display: display.replace(/(\\/|\\*|-|\\+)+$/, \"*\"),\r\n              };\r\n            } else if (/\\d$/.test(display) && display !== \"0\") {\r\n              return { ...state, display: `${display}${value}` };\r\n            } else return state;\r\n          case \"subtract\":\r\n            if (/(-|\\+)$/.test(display)) {\r\n              return { ...state, display: display.replace(/(-|\\+)$/, \"-\") };\r\n            } else if (display !== \"0\") {\r\n              return { ...state, display: `${display}${value}` };\r\n            } else if (display === \"0\") {\r\n              return { ...state, display: \"-\" };\r\n            } else return state;\r\n          case \"add\":\r\n            if (/\\d(\\/|\\*|-|\\+)+$/.test(display)) {\r\n              return {\r\n                ...state,\r\n                display: display.replace(/(\\/|\\*|-|\\+)+$/, \"+\"),\r\n              };\r\n            } else if (/\\d$/.test(display) && display !== \"0\") {\r\n              return { ...state, display: `${display}${value}` };\r\n            } else return state;\r\n          default:\r\n            return state;\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport calculatorReducer from \"./calculatorReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  calculator: calculatorReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"./Redux/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}